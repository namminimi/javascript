자바스크립트 화면에 나타내는방법(호출/출력) (자신이 작성한 코드 확인하기 위해 사용)
1. window.alert(), alert() 경고창으로 나타냄
2. document.write() 사이트에 나타냄
3. console.log()     사이트 콘솔창에 나타냄
4. html dom 요소를 이용 innerHTM
---------------------------------------------------------------------------------------------
변수: 변하는 값
상수: 고정된 값(변하지 않음)

변수 선언!
선언자 3개
var :
function(함수) 단위의 scope(변수 주소범위)
같은 변수명 여러번 쓸 수 있지만 다양한 사람들과 공유하다보면 헷갈려서 오류발생함
(요즘에는 자주 사용 안함)
호이스팅: 제일 위로 끌어올림(코드내에서)
블록안에 var변수 있을경우 블록 밖에서 호출하면 응답함 다른변수 불가능
위에서 호출하고 바로아래 var코드써서 선언해줘도 위로 끌어올려져 호출됨
다른 변수는 undefined
선언할때는 undefined임

let:
block단위(for{~!~}, while{~!~} 등등)의 scope ( block단위 안에 변수를 지역 변수라고함 // 안에서만 사용가능)
// block 밖에 있는 변수는 글로벌변수(모든곳 사용가능)
같은 변수명 사용 불가
선언할때는 undefined임

const
변수값이 절대로 변경되지 않을 것이라 확신하면 사용
이 변수는 상수라고 표현
 
카멜 표기법(camelCase)여러 단어를 조합하여 변수명을 만들때 흔이 사용됨
----------------------------------------------------------------------------------------------------
자바스크립트 데이터 타입: 
primitive(기본형)
1. 숫자형(Number)
	정수 및 부동소수점 숫자, 연산은 +-/*

2. BigInt
	(큰) 숫자뒤에 n붙음

3. 문자형(string)
	1. 큰따옴표: "hello"
	2. 작은따옴표: "hello"
	3. 역따옴표(백틱): `hello`
	(${----} format문과 비슷함)

4. 불린형(boolean)
	논리타입. true 긍정, false 부정

5. null
	값을 알 수 없을 때 사용
	(let age = null;) 알수 없거나 비어있다는 뜻

6. undefined
	값이 할당되지 않은 상태(변수 선언했지만 값을 안줬을때)

typeof는 함수가 아닌 연산자
변수의 타입을 알 수 있음
(undefined, boolean, number, string, object, symbol, function)


object(객체형)
---- 배열배운 후에 작성
----------------------------------------------------------------------------------
형변환
1. 암시적 변환
	문자열 자동변환, 수학관련 연산, 숫자 숫자형으로 자동 변환 (+덧셈은 제외)

2. 명시적 변환
	전달받은 값을 원하는 타입으로 변환
Number 타입으로 변환
Number()
parseInt()
parseFloat()

string타입으로 변환
String()
변수.toString(진수)
변수.toFixed(소수자리)
boolean타입으로 변환
boolean()

    2-1 숫자형으로 변환
	parseInt(문자/"37"): 문자를 정수형숫자로 변환
	parseFloat(문자/"3.14"): 문자를 실수형숫자로 변환
	Nember(문자/"37"/"3.14"): 둘다 변환
        undefined -> NaN
	null -> 0
	true -> 1
	false -> 0
	string -> 공백제거/남은 문자열x 0, 변환 실패는 NaN
	NaN으로 해석될시 isNaN()

   2-2 문자형으로 변환
	String(숫자/123): 숫자를 문자로 변환
	숫자.toString(진법/2): 숫자를 문자로 변환- 변환하면서 진법변경 ( 2진법 - 10)
	숫자.toFixed(소수자리수): 숫자를 문자로 - 실수형의 소수점 자리를 지정
	숫자 + "문자열": 숫자와 문자열을 한 문자열로 더해줌

   2-3 불린형으로 변환
	0, null, undefined, NaN, ""(여백없음) -> false
	1, 외의값 -> true
--------------------------------------------------------------------------
단항, 이항, 피연산자

단항: 피연산자 하나만 받는 연산자 단항연산자 ( let x = 1;)
이항: 두개의 피연산자를 받는 연산자 이항연산자 (let x =1, let y = 2) (x - y)
피연산자: 연산자가 연산을 수행하는 대상(수행원들)

1.산술연산자
+ - * / %(나머지) **(거듭제곱)

2.할당 연산자 
무언가 할당할 떄 쓰이는 =도 연산자
우선순위 3
let x = 2*2+1  // let x <- 계산 후 전달

복합 할당 연산자
x = x+1  -> x +=1
x = x -1  -> x -=1
x = x * 1  -> x *=1
x = x / 1  -> x /=1

let n = 2
n += 5; // n=7


3. 증가.감소 연산자
let counter = 2;
counter++: 변수 +1 증가
counter-- 변수 -1 감소

전위형
++counter 값을 증가 시킨 후 출력

후위형
counter++ 증가 시키기전 값 출력 후 증가

4. 비교연산자
true 와 false 로 값나옴
A > B 크다
A >= B 크거나 같다
A < B 작다
A <= B 작거나 같다
A == B 값이 같다
A === B 값이 타입이 같다
A != B 값이 같지 않다
A !== B 값과 타입이 같지 않다.

5. 논리 연산자

&&(그리고, and) 둘중에 하나라도 false가 있으면 false
-true && true > true
-false && true > false
 || (또는, or) 둘중에 하나라도 true가 있으면 true
-true || false > true
 !(반대,아니다, not) 반대의 결과값
!true > false
!false > true

6.삼항연산자
피연산자가 3개인 연산자
a > b ? "맞아요" : "틀려요";

-----------------------------------------------------------------------------